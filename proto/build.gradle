apply plugin: 'com.google.protobuf'

buildscript {

    dependencies {
        // ASSUMES GRADLE 2.12 OR HIGHER. Use plugin version 0.7.5 with earlier
        // gradle versions
        classpath 'com.google.protobuf:protobuf-gradle-plugin:0.8.0'
    }
}

dependencies {
    compile "io.grpc:grpc-all:${grpcVersion}"
}

protobuf {
    generatedFilesBaseDir = "$projectDir/src/generated"
    protoc {
        artifact = 'com.google.protobuf:protoc:3.1.0'
    }
    plugins {
        grpc {
            artifact = "io.grpc:protoc-gen-grpc-java:${grpcVersion}"
        }
    }
    generateProtoTasks {
        all()*.plugins {
            grpc {
                // To generate deprecated interfaces and static bindService method,
                // turn the enable_deprecated option to true below:
                option 'enable_deprecated=false'
            }
        }
    }
}

idea {
    module {
        // Not using generatedSourceDirs because of
        // https://discuss.gradle.org/t/support-for-intellij-2016/15294/8
//        iml {
//
//
//            beforeMerged { m ->
////                m.sourceDirs += file("${projectDir}/build/generated/source/proto/main/java");
////                m.sourceDirs += file("${projectDir}/build/generated/source/proto/main/grpc");
//                m.excludeFolders.clear()
//                println("before ${m.excludeFolders}")
//            }
//
//            whenMerged { m ->
//                println("excluded ${m.excludeFolders}")
////                excludeDirs -= file("${projectDir}/build")
////                println("excluded ${m.excludeFolders}")
////                m.excludeFolders = files { new File("${projectDir}/build").listFiles( { d, name -> name != 'generated' } as FilenameFilter)} as Set
//            }
//        }

//        TODO: Remove the build folder from the excludes
//        def f = files { new File("${projectDir}/build").listFiles( { d, name -> name != 'generated' } as FilenameFilter)}
//        println("files ${f.files}")
//        excludeDirs += files { new File("${projectDir}/build").listFiles( { d, name -> name != 'generated' } as FilenameFilter)}
//        excludeDirs -= file("${projectDir}/build")

        sourceDirs += file("${projectDir}/src/generated/main/java");
        sourceDirs += file("${projectDir}/src/generated/main/grpc");
    }
}
